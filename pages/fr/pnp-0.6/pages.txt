====== Pages ======

"pages" nous donne la possibilité de regrouper les graphiques de plusieurs hosts/services sur une seule page, permettant ainsi de composer des documents pdf spécifiques. Cela nous permet - par exemple - d'afficher le traffic réseau de tous nos robots de sauvegarde. Les expressions régulières sont également supportées, ce qui vous permet une modularité importante avec seulement quelques règles.
Le dossier configuré en utilisant "$conf['page_dir']" contient un ou plusieurs fichier(s) avec une extension ".cfg".

Les commentaires commencent par le signe "dièse" (#) et peuvent être inclus dans les lignes. Chaque fichier contient une définition de "page" qui spécifie le nom de la page ainsi que les graphiques  sélectionnés en utilisant les expressions régulières ou non.

La description correspondant au champ "page_name" apparaîtra dans la liste des pages disponibles dans la fenêtre du navigateur.

**Attention :** Les champs "host_name" et "service_desc" font directement référence aux fichiers créés dans le répertoire des données de performance (ex.: /var/nagios/perfdata) et non aux variables définies dans les fichiers de configuration de Nagios. Les espaces sont remplacés par des symboles de soulignement (_).performances 


<code>define page {
       use_regex 1		# 0 = use no regular expressions, 1 = use regular expressions
       page_name test-page	# page description
}</code>

suivi par une ou plusieurs définitions de graphiques :

<code>define graph {
       host_name       host1,host2,host3
       service_desc    Current_Load
}</code>
**Attention:** Une liste de nom d'hôtes fonctionne uniquement si le paramètre "use_regex" est réglé à 0 !

<code>define graph {
       host_name       host4
       service_desc    Current_Users
}</code>

Et maintenant quelques définitions utilisant les expressions régulières.
Le paramètre "use_regex" doit pour cela être réglé à 1 !
Ainsi, pour atteindre tous les hôtes dont le nom commence par "Tape" :
<code>define graph {
       host_name       ^Tape
       service_desc    Traffic
}</code>

tous les hôtes dont le nom se termine par "00":
<code>define graph {
       host_name       00$
       service_desc    Load
}</code>

tous les services sur l'hôte local qui contiennent les lettres "a" ou "o" :
<code>define graph {
       host_name       localhost
       service_desc    a|o
}</code>

tous les services dont le nom contient un caractère "underscore" suivi de trois chiffres sur les hôtes dont le nom commence par les lettres "UX :
<code>define graph {
       host_name       ^UX
       service_desc    _\d{3}
}</code>

Dans la plupart des cas, vous voudrez sans doute limiter l'affichage à un seul graphique. Cet objectif sera atteint si vous ajouter la directive "source" suivi du numéro d'ordre du graphique souhaité, tel que défini dans les choix définis dans l'interface, le premier étant 0 (par exemple pour 2 heures).
<code>define graph {
       host_name       host1,host2,host3
       service_desc    PING
       source          1
}</code>

[[start|Retour à l'index]] | [[xport| Export des données]]